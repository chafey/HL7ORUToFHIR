// Generated by CoffeeScript 1.6.2
(function() {
  var Field, HeadSegment, Segment, _,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Field = require('./Field');

  Segment = require('./Segment');

  _ = require('underscore');

  HeadSegment = (function(_super) {
    __extends(HeadSegment, _super);

    function HeadSegment(segment, control) {
      this.control = control;
      HeadSegment.__super__.constructor.call(this, segment, this.control);
      this.fields.splice(1, 0, new Field([[this.control.fields]], this.control));
    }

    HeadSegment.prototype.toString = function() {
      return _.reduce(this.fields, function(memo, field, index) {
        if (index === 0) {
          memo.push('MSH');
          memo.push("" + this.control.components + this.control.repeat + this.control.escape + this.control.subcomponents);
        } else if (index > 2) {
          memo.push(field.toString());
        }
        return memo;
      }, [], this).join(this.control.fields);
    };

    return HeadSegment;

  })(Segment);

  module.exports = HeadSegment;

}).call(this);
