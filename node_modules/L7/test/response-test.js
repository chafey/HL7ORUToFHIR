// Generated by CoffeeScript 1.6.2
(function() {
  var hl7, parser, should, vows, _;

  vows = require('vows');

  should = require('should');

  _ = require('underscore');

  parser = require('..');

  vows.describe('responding').addBatch({
    'basic response handling': {
      topic: function() {
        return parser.parse(hl7);
      },
      'response returns something': function(msg) {
        return should.exist(msg.respond('AA'));
      },
      'response returns a string': function(msg) {
        return _.isString(msg.respond('AA')).should.be["true"];
      }
    },
    'message subsitutions': {
      topic: function() {
        return parser.parse(parser.parse(hl7).respond('AA'));
      },
      'confirm message control id': function(response) {
        response.query('MSH|10').should.eql('4676115');
        return response.query('MSA|2').should.eql('4676115');
      },
      'confirm acknowledge code': function(response) {
        return response.query('MSA|1').should.eql('AA');
      }
    },
    'message timestamp subsitutions': {
      topic: function() {
        return {
          response: parser.parse(parser.parse(hl7).respond('AA')),
          timestamp: new Date()
        };
      },
      'confirm timestamp of ACK': function(_arg) {
        var response, result, timestamp;

        response = _arg.response, timestamp = _arg.timestamp;
        result = response.query('MSH@7');
        _.isDate(result).should.be["true"];
        result.getFullYear().should.eql(timestamp.getFullYear());
        result.getMonth().should.eql(timestamp.getMonth());
        result.getDate().should.eql(timestamp.getDate());
        result.getHours().should.eql(timestamp.getHours());
        result.getMinutes().should.eql(timestamp.getMinutes());
        result.getSeconds().should.eql(timestamp.getSeconds());
        return result.getMilliseconds().should.eql(0);
      }
    },
    'default response senders and receivers': {
      topic: function() {
        return parser.parse(parser.parse(hl7).respond('AA'));
      },
      'should reverse sending and receiving application by default': function(response) {
        response.query('MSH|3').should.eql('GOBLET');
        response.query('MSH|4').should.eql('ZYX');
        response.query('MSH|5').should.eql('REG^REG^');
        return response.query('MSH|6').should.eql('XYZ');
      }
    },
    'overridden response senders and receivers': {
      topic: function() {
        return parser.parse(parser.parse(hl7).respond('AA', {
          sendingApplication: 'stoat',
          sendingFacility: 'village',
          receivingApplication: 'weasel',
          receivingFacility: 'town'
        }));
      },
      'should apply overrides': function(response) {
        response.query('MSH|3').should.eql('weasel');
        response.query('MSH|4').should.eql('town');
        response.query('MSH|5').should.eql('stoat');
        return response.query('MSH|6').should.eql('village');
      }
    },
    'error method': {
      topic: function() {
        return parser.parse(hl7);
      },
      'error is the same as responding with AE': function(msg) {
        return msg.respond('AE').should.eql(msg.error());
      }
    },
    'reject method': {
      topic: function() {
        return parser.parse(hl7);
      },
      'reject is the same as responding with AR': function(msg) {
        return msg.respond('AR').should.eql(msg.reject());
      }
    },
    'acknowledge method': {
      topic: function() {
        return parser.parse(hl7);
      },
      'acknowledge is the same as responding with AA': function(msg) {
        return msg.respond('AA').should.eql(msg.acknowledge());
      }
    },
    'no text message': {
      topic: function() {
        return parser.parse(parser.parse(hl7).acknowledge());
      },
      'no text message means empty MSA|3 field': function(response) {
        return should.strictEqual(response.query('MSA|3'), '');
      }
    },
    'adding text message': {
      topic: function() {
        return parser.parse(parser.parse(hl7).acknowledge({
          textMessage: 'Everything is fine.'
        }));
      },
      'text message received': function(response) {
        return response.query('MSA|3').should.eql('Everything is fine.');
      }
    }
  })["export"](module);

  hl7 = "MSH|^~\\&|REG^REG^|XYZ|GOBLET|ZYX|20050912110538|SI&U|SIU^S12|4676115|P|2.3\rPID|||353966||SMITH^JOHN^^^^||19820707|F||C|108 MAIN STREET ^^ANYTOWN^TX^77777^^|HARV|(512)555-0170|||||00362103|123-45-6789||||||||||||\rSCH|1||||||NEW||||20050912110230^20050912110430||||||||||||||||||^^^^^^||3|\rPV1||O|SEROT|3|||1284^JOHNSON^MIKE^S.^^MD~|||SEROT||||1|||1284^JOHNSON^MIKE^S.^^ MD|SERIES|787672|B|||||||||N||||||||||||A|||20050912110230|||||| PV2|||HAND BRACE NEEDS REPAIRED|||||||||||20050912||||||||||A||20050725|||||O||||||\rNK1|0001|HULK^INCREDIBLE|M|123 FAKE ST^^OUTLAND^^00000|123456789||";

}).call(this);
